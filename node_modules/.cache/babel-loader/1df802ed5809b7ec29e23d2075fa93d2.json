{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HBALOYI\\\\Documents\\\\Reactjs\\\\dashboard\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Button, Row, Col, Container, Form } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css'; // import LineChart from '.LineChart/LineChart';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrlDataSource = 'http://localhost:3000/api/csv/ds';\nconst baseUrlData = 'http://localhost:3000/api/csv';\nconst baseURLCompagin = 'http://localhost:3000/api/csv/camp/';\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Campaign metrics'\n    }\n  }\n};\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nlet ds = {};\nds[\"Datasource\"] = \"red\";\nds[\"Facebook Ads\"] = \"rgba(255, 99, 132, 0.5)\";\nds[\"Google Adwords\"] = \"rgba(53, 162, 235, 0.5)\";\nds[\"Google Analytics\"] = \"gray\";\nds[\"Mailchimp\"] = \"green\";\n\nfunction App() {\n  _s();\n\n  const [dataSource, setdataSource] = useState([]);\n  const [data, setData] = useState([]);\n  const [dataSourceOptions, setdataSourceOptions] = useState([]);\n  const [campaignOptions, setCampaignOptions] = useState([]);\n  const [selectedData, setSelectedData] = useState('');\n  const [selectedCampaign, setSelectedCampaign] = useState('');\n  const [dataPlot, setDataPlot] = useState({\n    labels,\n    datasets: []\n  });\n  useEffect(() => {\n    axios.get(baseUrlData).then(response => {\n      console.log(\"dataDD\", response.data);\n      setData(response.data.data);\n    });\n  }, []);\n\n  const filterData = e => {\n    e.preventDefault();\n    console.log(\"selectedData\", selectedData);\n    console.log(\"selectedCampaign\", selectedCampaign);\n    /**axios.get('url').then(rep=>{\n      console.log(\"DATARESP\", rep);\n    })*/\n\n    let arr = [];\n    selectedData.forEach(d => {\n      let filtererd = data.filter(ds => ds.dataSource === d && ds.campaign === selectedCampaign && ds.clicks !== null);\n      filtererd = filtererd.map(e => e.clicks);\n      arr = [...arr, {\n        label: d,\n        data: filtererd,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: ds[d]\n      }];\n    });\n    setDataPlot({\n      labels,\n      datasets: arr\n    });\n  };\n\n  useEffect(() => {\n    axios.get(baseUrlDataSource).then(response => {\n      console.log(\"data\", response.data);\n      setdataSource(response.data.data);\n      let arr = [];\n\n      for (let str of response.data.data) {\n        arr = [...arr, {\n          label: str,\n          value: str\n        }];\n      }\n\n      setdataSourceOptions(arr);\n    });\n  }, []);\n  const [campaign, setCampagin] = useState([]);\n  useEffect(() => {\n    axios.get(baseURLCompagin).then(response => {\n      console.log(\"sacmpaign\", response.data);\n      setCampagin(response.data.data);\n      let arr = [];\n      response.data.data.forEach(r => {\n        arr = [...arr, {\n          label: r,\n          value: r\n        }];\n      });\n      setCampaignOptions(arr);\n    });\n  }, []);\n  const state = {\n    labels: dataSource,\n    datasets: [{\n      label: 'Rainfall',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(0,0,0,1)',\n      borderWidth: 2,\n      data: campaign\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mx-0 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"menu\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Data Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            name: \"colors\",\n            onChange: evt => setSelectedData(evt.map(e => e.value)),\n            options: dataSourceOptions,\n            className: \"basic-multi-select\",\n            classNamePrefix: \"select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"mt-3\",\n            children: \"Compaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"colors\",\n            options: campaignOptions,\n            onChange: evt => setSelectedCampaign(evt.value),\n            className: \"basic-multi-select\",\n            classNamePrefix: \"select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \" mt-3\",\n            onClick: e => filterData(e),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            options: options,\n            data: dataPlot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KXVbsUMWIr4xT/ytaOMB4ns8208=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HBALOYI/Documents/Reactjs/dashboard/src/components/App.js"],"names":["useEffect","useState","axios","Button","Row","Col","Container","Form","Line","Select","baseUrlDataSource","baseUrlData","baseURLCompagin","options","responsive","plugins","legend","position","title","display","text","labels","ds","App","dataSource","setdataSource","data","setData","dataSourceOptions","setdataSourceOptions","campaignOptions","setCampaignOptions","selectedData","setSelectedData","selectedCampaign","setSelectedCampaign","dataPlot","setDataPlot","datasets","get","then","response","console","log","filterData","e","preventDefault","arr","forEach","d","filtererd","filter","campaign","clicks","map","label","borderColor","backgroundColor","str","value","setCampagin","r","state","fill","lineTension","borderWidth","evt"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Button, Row, Col, Container, Form } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\n// import LineChart from '.LineChart/LineChart';\n\nconst baseUrlDataSource = 'http://localhost:3000/api/csv/ds';\nconst baseUrlData = 'http://localhost:3000/api/csv';\nconst baseURLCompagin = 'http://localhost:3000/api/csv/camp/';\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n    },\n    title: {\n      display: true,\n      text: 'Campaign metrics',\n    },\n  },\n};\n\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nlet ds = {};\n\nds[\"Datasource\"] = \"red\";\nds[\"Facebook Ads\"] = \"rgba(255, 99, 132, 0.5)\";\nds[\"Google Adwords\"] = \"rgba(53, 162, 235, 0.5)\";\nds[\"Google Analytics\"] = \"gray\";\nds[\"Mailchimp\"] = \"green\";\n\n\n\nfunction App() {\n\n\n  const [dataSource, setdataSource] = useState([]);\n  const [data, setData] = useState([]);\n  const [dataSourceOptions, setdataSourceOptions] = useState([]);\n  const [campaignOptions, setCampaignOptions] = useState([]);\n\n  const [selectedData, setSelectedData] = useState('');\n  const [selectedCampaign, setSelectedCampaign] = useState('');\n const [dataPlot, setDataPlot] = useState({\n  labels,\n  datasets: []\n });\n\n  \n    useEffect(() => {\n    axios.get(baseUrlData).then((response) => {\n      console.log(\"dataDD\", response.data);\n      setData(response.data.data);\n    });\n  }, []);\n\n  const filterData = (e) => {\n    e.preventDefault();\n    console.log(\"selectedData\", selectedData);\n    console.log(\"selectedCampaign\", selectedCampaign);\n    /**axios.get('url').then(rep=>{\n      console.log(\"DATARESP\", rep);\n    })*/\n    let arr = []\n    selectedData.forEach(d=> {\n      let filtererd = data.filter(ds=> ds.dataSource === d && ds.campaign === selectedCampaign && ds.clicks !== null)      \n      filtererd = filtererd.map(e=>e.clicks);\n      arr = [...arr, {\n      label: d,\n      data: filtererd,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: ds[d],\n    }];\n\n    })\n    setDataPlot({\n      labels,\n      datasets: arr\n    });\n\n  }\n\n  \n  \n  useEffect(() => {\n    axios.get(baseUrlDataSource).then((response) => {\n      console.log(\"data\", response.data);\n      setdataSource(response.data.data);\n      let arr = []\n      for(let str of response.data.data)\n      {\n        arr = [...arr, {label:str, value:str}];\n      }\n      setdataSourceOptions(arr);\n    });\n  }, []);\n\n  const [campaign, setCampagin] = useState([]);\n\n  useEffect(() => {\n    axios.get(baseURLCompagin).then((response) => {\n      console.log(\"sacmpaign\", response.data)\n      setCampagin(response.data.data);\n      let arr = [];\n      response.data.data.forEach(r=> {\n        arr = [...arr, {label:r, value:r}];\n      })\n      setCampaignOptions(arr);\n    });\n  }, []);\n\n  const state = {\n    labels: dataSource,\n    datasets: [\n      {\n        label: 'Rainfall',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: campaign\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <Container fluid>\n        <Row className=\"mx-0 mt-5\">\n          <Col md={4} className=\"menu\">\n            <Form.Label>Data Source</Form.Label>\n            <Select\n              isMulti\n              name=\"colors\"\n              onChange={(evt)=>setSelectedData(evt.map(e=>e.value))}\n              options={dataSourceOptions}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n            />\n\n            <Form.Label className=\"mt-3\">Compaign</Form.Label>\n            <Select\n              name=\"colors\"\n              options={campaignOptions}\n              onChange={(evt)=>setSelectedCampaign(evt.value)}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n            />\n\n            <Button variant=\"primary\" className=\" mt-3\" onClick={(e)=>filterData(e)}>Apply</Button>\n\n          </Col>\n          <Col md={8} className=\"main\">\n            <h2>Dashboard</h2>\n\n            <Line options={options} data={dataPlot} />\n\n            {/* <Line\n              data={state}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Average Rainfall per month',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }}\n            /> */}\n            {/* <LineChart/> */}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}